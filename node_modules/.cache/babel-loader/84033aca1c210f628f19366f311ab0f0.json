{"ast":null,"code":"import _slicedToArray from\"C:\\\\clone-pipefy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useContext}from'react';import{useDrag,useDrop}from'react-dnd';import BoardContext from'../Board/context';import{Container,Label}from'./style';export default function Card(_ref){var data=_ref.data,index=_ref.index,listIndex=_ref.listIndex;var ref=useRef();var _useContext=useContext(BoardContext),move=_useContext.move;var _useDrag=useDrag({item:{type:'CARD',index:index,listIndex:listIndex},collect:function collect(monitor){return{isDragging:monitor.isDragging()};}}),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,dragRef=_useDrag2[1];//Mover o Card para outra Lista\nvar _useDrop=useDrop({accept:'CARD',hover:function hover(item,monitor){var draggedListIndex=item.listIndex;var targetListIndex=listIndex;var draggedIndex=item.index;var targetIndex=index;if(draggedIndex===targetIndex&&draggedListIndex===targetListIndex){return;}var targetSize=ref.current.getBoundingClientRect();var targetCenter=(targetSize.bottom-targetSize.top)/2;var draggedOffset=monitor.getClientOffset();var draggedTop=draggedOffset.y-targetSize.top;if(draggedIndex<targetIndex&&draggedTop<targetCenter){return;}if(draggedIndex>targetIndex&&draggedTop>targetCenter){return;}move(draggedListIndex,targetListIndex,draggedIndex,targetIndex);item.index=targetIndex;item.listIndex=targetListIndex;}}),_useDrop2=_slicedToArray(_useDrop,2),dropRef=_useDrop2[1];dragRef(dropRef(ref));return React.createElement(Container,{ref:ref,isDragging:isDragging},React.createElement(\"header\",null,data.labels.map(function(label){return React.createElement(Label,{key:label,color:label});})),React.createElement(\"p\",null,data.content),data.user&&React.createElement(\"img\",{src:data.user,alt:\"\"}));}","map":{"version":3,"sources":["C:/clone-pipefy/src/components/Card/index.js"],"names":["React","useRef","useContext","useDrag","useDrop","BoardContext","Container","Label","Card","data","index","listIndex","ref","move","item","type","collect","monitor","isDragging","dragRef","accept","hover","draggedListIndex","targetListIndex","draggedIndex","targetIndex","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedOffset","getClientOffset","draggedTop","y","dropRef","labels","map","label","content","user"],"mappings":"4IAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,UAAxB,KAA0C,OAA1C,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,WAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,SAAjC,CAEA,cAAe,SAASC,CAAAA,IAAT,MAA0C,IAA1BC,CAAAA,IAA0B,MAA1BA,IAA0B,CAApBC,KAAoB,MAApBA,KAAoB,CAAbC,SAAa,MAAbA,SAAa,CACvD,GAAMC,CAAAA,GAAG,CAAGX,MAAM,EAAlB,CADuD,gBAEtCC,UAAU,CAACG,YAAD,CAF4B,CAE/CQ,IAF+C,aAE/CA,IAF+C,cAIrBV,OAAO,CAAC,CACxCW,IAAI,CAAE,CAAEC,IAAI,CAAE,MAAR,CAAgBL,KAAK,CAALA,KAAhB,CAAuBC,SAAS,CAATA,SAAvB,CADkC,CAExCK,OAAO,CAAE,iBAAAC,OAAO,QAAK,CACnBC,UAAU,CAAED,OAAO,CAACC,UAAR,EADO,CAAL,EAFwB,CAAD,CAJc,sCAI9CA,UAJ8C,cAI9CA,UAJ8C,CAIhCC,OAJgC,cAWvD;AAXuD,aAYnCf,OAAO,CAAC,CAC1BgB,MAAM,CAAE,MADkB,CAE1BC,KAF0B,gBAEpBP,IAFoB,CAEdG,OAFc,CAEL,CACnB,GAAMK,CAAAA,gBAAgB,CAAGR,IAAI,CAACH,SAA9B,CACA,GAAMY,CAAAA,eAAe,CAAGZ,SAAxB,CAEA,GAAMa,CAAAA,YAAY,CAAGV,IAAI,CAACJ,KAA1B,CACA,GAAMe,CAAAA,WAAW,CAAGf,KAApB,CAEA,GAAIc,YAAY,GAAKC,WAAjB,EAAgCH,gBAAgB,GAAKC,eAAzD,CAA0E,CACxE,OACD,CAED,GAAMG,CAAAA,UAAU,CAAGd,GAAG,CAACe,OAAJ,CAAYC,qBAAZ,EAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,CAACH,UAAU,CAACI,MAAX,CAAoBJ,UAAU,CAACK,GAAhC,EAAuC,CAA5D,CAEA,GAAMC,CAAAA,aAAa,CAAGf,OAAO,CAACgB,eAAR,EAAtB,CACA,GAAMC,CAAAA,UAAU,CAAGF,aAAa,CAACG,CAAd,CAAkBT,UAAU,CAACK,GAAhD,CAEA,GAAIP,YAAY,CAAGC,WAAf,EAA8BS,UAAU,CAAGL,YAA/C,CAA6D,CAC3D,OACD,CAED,GAAIL,YAAY,CAAGC,WAAf,EAA8BS,UAAU,CAAGL,YAA/C,CAA6D,CAC3D,OACD,CAEDhB,IAAI,CAACS,gBAAD,CAAmBC,eAAnB,CAAoCC,YAApC,CAAkDC,WAAlD,CAAJ,CAEAX,IAAI,CAACJ,KAAL,CAAae,WAAb,CACAX,IAAI,CAACH,SAAL,CAAiBY,eAAjB,CACD,CA/ByB,CAAD,CAZ4B,sCAY9Ca,OAZ8C,cA8CvDjB,OAAO,CAACiB,OAAO,CAACxB,GAAD,CAAR,CAAP,CAEA,MACE,qBAAC,SAAD,EAAW,GAAG,CAAEA,GAAhB,CAAqB,UAAU,CAAEM,UAAjC,EACE,kCACGT,IAAI,CAAC4B,MAAL,CAAYC,GAAZ,CAAgB,SAAAC,KAAK,QAAI,qBAAC,KAAD,EAAO,GAAG,CAAEA,KAAZ,CAAmB,KAAK,CAAEA,KAA1B,EAAJ,EAArB,CADH,CADF,CAIE,6BAAI9B,IAAI,CAAC+B,OAAT,CAJF,CAKI/B,IAAI,CAACgC,IAAL,EAAa,2BAAK,GAAG,CAAEhC,IAAI,CAACgC,IAAf,CAAqB,GAAG,CAAC,EAAzB,EALjB,CADF,CASD","sourcesContent":["import React, { useRef, useContext } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport BoardContext from '../Board/context';\r\nimport { Container, Label } from './style';\r\n\r\nexport default function Card({ data, index, listIndex }) {\r\n  const ref = useRef();\r\n  const { move } = useContext(BoardContext);\r\n\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    item: { type: 'CARD', index, listIndex },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  //Mover o Card para outra Lista\r\n  const [, dropRef] = useDrop({\r\n    accept: 'CARD',\r\n    hover(item, monitor) {\r\n      const draggedListIndex = item.listIndex;\r\n      const targetListIndex = listIndex;\r\n\r\n      const draggedIndex = item.index;\r\n      const targetIndex = index;\r\n\r\n      if (draggedIndex === targetIndex && draggedListIndex === targetListIndex) {\r\n        return;\r\n      }\r\n\r\n      const targetSize = ref.current.getBoundingClientRect();\r\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\r\n\r\n      const draggedOffset = monitor.getClientOffset();\r\n      const draggedTop = draggedOffset.y - targetSize.top;\r\n\r\n      if (draggedIndex < targetIndex && draggedTop < targetCenter) {\r\n        return;\r\n      }\r\n\r\n      if (draggedIndex > targetIndex && draggedTop > targetCenter) {\r\n        return;\r\n      }\r\n\r\n      move(draggedListIndex, targetListIndex, draggedIndex, targetIndex);\r\n\r\n      item.index = targetIndex;\r\n      item.listIndex = targetListIndex;\r\n    }\r\n  })\r\n\r\n  dragRef(dropRef(ref));\r\n\r\n  return (\r\n    <Container ref={ref} isDragging={isDragging}>\r\n      <header>\r\n        {data.labels.map(label => <Label key={label} color={label} />)}\r\n      </header>\r\n      <p>{data.content}</p>\r\n      { data.user && <img src={data.user} alt=\"\"/> }\r\n    </Container>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}